{"ast":null,"code":"var _jsxFileName = \"/home/alvaro/Documentos/DWECL/REACT/examenes/primerExamenReact/src/App.js\";\nimport React from 'react';\nimport { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'reactstrap';\n\n// hacerlo con array y pasando parametros para que no sea tan largo\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Botoncillo = props => {\n  return (\n    /*#__PURE__*/\n    // Da error diciendo que en color va un string pero le tengo que pasar una funcion\n    _jsxDEV(Button, {\n      onClick: () => props.funci(),\n      color: () => props.colore() /*color={props.colore}*/,\n      children: props.numero\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c = Botoncillo;\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // numero tmb deberia ser un array\n      numero: 0,\n      numeros: Array(5).fill(0),\n      // array que te rellena con fill\n      listabotones: Array(5).fill(\"secondary\")\n    };\n  }\n  sumar(x) {\n    this.setState({\n      numeros: this.state.numero[1] + 1\n    });\n  }\n  color() {\n    if (this.state.numero1 > 0) {\n      this.setState({\n        color1: \"danger\"\n      });\n    } else {\n      this.setState({\n        color1: \"secondary\"\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(Botoncillo, {\n          numero: this.state.numero[1],\n          funci: () => this.sumar(this.state.numeros[1]),\n          colore: () => this.color()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\n\n/*\n\n*/\nvar _c;\n$RefreshReg$(_c, \"Botoncillo\");","map":{"version":3,"names":["React","Component","Button","jsxDEV","_jsxDEV","Botoncillo","props","onClick","funci","color","colore","children","numero","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","constructor","state","numeros","Array","fill","listabotones","sumar","x","setState","numero1","color1","render","className","$RefreshReg$"],"sources":["/home/alvaro/Documentos/DWECL/REACT/examenes/primerExamenReact/src/App.js"],"sourcesContent":["import React from 'react';\nimport { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'reactstrap';\n\n// hacerlo con array y pasando parametros para que no sea tan largo\n\nconst Botoncillo = (props) => {\n  return (\n    // Da error diciendo que en color va un string pero le tengo que pasar una funcion\n    <Button onClick={() => props.funci()} color={() => props.colore()} /*color={props.colore}*/>\n      {props.numero}\n    </Button>\n  );\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // numero tmb deberia ser un array\n      numero: 0,\n      numeros: Array(5).fill(0),\n      // array que te rellena con fill\n      listabotones:Array(5).fill(\"secondary\")\n    }\n  }\n\n  sumar(x) {\n    this.setState({ numeros: this.state.numero[1] + 1 });\n  }\n\n  color() {\n    if (this.state.numero1 > 0) {\n      this.setState({ color1: \"danger\" })\n    } else {\n      this.setState({ color1: \"secondary\" })\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n          <Botoncillo numero={this.state.numero[1]} funci={() => this.sumar(this.state.numeros[1])} colore={() => this.color()} />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/*\n\n*/\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,sCAAsC;AAC7C,SAASC,MAAM,QAAQ,YAAY;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B;IAAA;IACE;IACAF,OAAA,CAACF,MAAM;MAACK,OAAO,EAAEA,CAAA,KAAMD,KAAK,CAACE,KAAK,CAAC,CAAE;MAACC,KAAK,EAAEA,CAAA,KAAMH,KAAK,CAACI,MAAM,CAAC,CAAE,CAAC;MAAAC,QAAA,EAChEL,KAAK,CAACM;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;AAEb,CAAC;AAAAC,EAAA,GAPKZ,UAAU;AAShB,MAAMa,GAAG,SAASjB,SAAS,CAAC;EAC1BkB,WAAWA,CAACb,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACc,KAAK,GAAG;MACX;MACAR,MAAM,EAAE,CAAC;MACTS,OAAO,EAAEC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;MACzB;MACAC,YAAY,EAACF,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,WAAW;IACxC,CAAC;EACH;EAEAE,KAAKA,CAACC,CAAC,EAAE;IACP,IAAI,CAACC,QAAQ,CAAC;MAAEN,OAAO,EAAE,IAAI,CAACD,KAAK,CAACR,MAAM,CAAC,CAAC,CAAC,GAAG;IAAE,CAAC,CAAC;EACtD;EAEAH,KAAKA,CAAA,EAAG;IACN,IAAI,IAAI,CAACW,KAAK,CAACQ,OAAO,GAAG,CAAC,EAAE;MAC1B,IAAI,CAACD,QAAQ,CAAC;QAAEE,MAAM,EAAE;MAAS,CAAC,CAAC;IACrC,CAAC,MAAM;MACL,IAAI,CAACF,QAAQ,CAAC;QAAEE,MAAM,EAAE;MAAY,CAAC,CAAC;IACxC;EACF;EAGAC,MAAMA,CAAA,EAAG;IACP,oBACE1B,OAAA;MAAK2B,SAAS,EAAC,KAAK;MAAApB,QAAA,eAClBP,OAAA;QAAQ2B,SAAS,EAAC,YAAY;QAAApB,QAAA,eAE5BP,OAAA,CAACC,UAAU;UAACO,MAAM,EAAE,IAAI,CAACQ,KAAK,CAACR,MAAM,CAAC,CAAC,CAAE;UAACJ,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACiB,KAAK,CAAC,IAAI,CAACL,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAE;UAACX,MAAM,EAAEA,CAAA,KAAM,IAAI,CAACD,KAAK,CAAC;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;AACF;AAEA,eAAeE,GAAG;;AAElB;AACA;AACA;AAFA,IAAAD,EAAA;AAAAe,YAAA,CAAAf,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}